package com.invenio.domain;

// Generated May 4, 2013 11:37:21 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Instrument generated by hbm2java
 */
@Entity
@Table(name = "instrument")
@NamedQueries (
@NamedQuery(name="findInstrumentByCode", query="FROM com.invenio.domain.Instrument i WHERE i.instrumentCode = ?")		
)
public class Instrument implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -2015731531963743736L;
	private Integer instrumentId;
	private String instrumentName;
	private String instrumentCode;
	private String portfolio;
	private String maturity;
	private BigDecimal startValue;
	private BigDecimal endValue;
	private BigDecimal multiple;
	private Set<MUsDump> MUsDumps = new HashSet<MUsDump>(0);
	private Set<OptDump> optDumps = new HashSet<OptDump>(0);
	private Set<FutDump> futDumps = new HashSet<FutDump>(0);

	public Instrument() {
	}

	public Instrument(String instrumentName) {
		this.instrumentName = instrumentName;
	}

	public Instrument(String instrumentName, String instrumentCode,
			String portfolio, String maturity, BigDecimal startValue,
			BigDecimal endValue, BigDecimal multiple, Set<MUsDump> MUsDumps,
			Set<OptDump> optDumps, Set<FutDump> futDumps) {
		this.instrumentName = instrumentName;
		this.instrumentCode = instrumentCode;
		this.portfolio = portfolio;
		this.maturity = maturity;
		this.startValue = startValue;
		this.endValue = endValue;
		this.multiple = multiple;
		this.MUsDumps = MUsDumps;
		this.optDumps = optDumps;
		this.futDumps = futDumps;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "instrument_id", unique = true, nullable = false)
	public Integer getInstrumentId() {
		return this.instrumentId;
	}

	public void setInstrumentId(Integer instrumentId) {
		this.instrumentId = instrumentId;
	}

	@Column(name = "instrument_name", nullable = false, length = 200)
	public String getInstrumentName() {
		return this.instrumentName;
	}

	public void setInstrumentName(String instrumentName) {
		this.instrumentName = instrumentName;
	}

	@Column(name = "instrument_code", length = 200)
	public String getInstrumentCode() {
		return this.instrumentCode;
	}

	public void setInstrumentCode(String instrumentCode) {
		this.instrumentCode = instrumentCode;
	}

	@Column(name = "portfolio", length = 200)
	public String getPortfolio() {
		return this.portfolio;
	}

	public void setPortfolio(String portfolio) {
		this.portfolio = portfolio;
	}

	@Column(name = "maturity", length = 200)
	public String getMaturity() {
		return this.maturity;
	}

	public void setMaturity(String maturity) {
		this.maturity = maturity;
	}

	@Column(name = "start_value", precision = 10)
	public BigDecimal getStartValue() {
		return this.startValue;
	}

	public void setStartValue(BigDecimal startValue) {
		this.startValue = startValue;
	}

	@Column(name = "end_value", precision = 10)
	public BigDecimal getEndValue() {
		return this.endValue;
	}

	public void setEndValue(BigDecimal endValue) {
		this.endValue = endValue;
	}

	@Column(name = "multiple", precision = 10)
	public BigDecimal getMultiple() {
		return this.multiple;
	}

	public void setMultiple(BigDecimal multiple) {
		this.multiple = multiple;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "instrument")
	public Set<MUsDump> getMUsDumps() {
		return this.MUsDumps;
	}

	public void setMUsDumps(Set<MUsDump> MUsDumps) {
		this.MUsDumps = MUsDumps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "instrument")
	public Set<OptDump> getOptDumps() {
		return this.optDumps;
	}

	public void setOptDumps(Set<OptDump> optDumps) {
		this.optDumps = optDumps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "instrument")
	public Set<FutDump> getFutDumps() {
		return this.futDumps;
	}

	public void setFutDumps(Set<FutDump> futDumps) {
		this.futDumps = futDumps;
	}

}
